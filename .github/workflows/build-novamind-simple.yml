name: Build NovaMind Lite OS (simple)

on:
  workflow_dispatch:

jobs:
  build-simple:
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            live-build xorriso syslinux-common squashfs-tools debootstrap \
            ca-certificates parted grub-pc-bin grub-efi-amd64-bin \
            dosfstools mtools

      - name: Build ISO (Debian bookworm, pinned sources, no trailing slashes)
        run: |
          set -e
          # cleanup
          sudo rm -rf config/* cache/* chroot/* binary/* || true
          sudo lb clean || true

          # Пінуємо APT-джерела всередині chroot
          mkdir -p config/archives
          cat <<'EOF' | sudo tee config/archives/debian.list.chroot >/dev/null
deb http://deb.debian.org/debian bookworm main contrib non-free non-free-firmware
deb http://deb.debian.org/debian bookworm-updates main contrib non-free non-free-firmware
EOF
          echo 'deb http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware' \
            | sudo tee config/archives/security.list.chroot >/dev/null

          # Ключовий пакет
          echo 'debian-archive-keyring' | sudo tee config/bootstrap-include >/dev/null

          # Конфігурація live-build (без завершальних слешів у дзеркалах)
          sudo lb config \
            --mode debian \
            --distribution bookworm \
            --archive-areas "main contrib non-free non-free-firmware" \
            --security false \
            --mirror-bootstrap http://deb.debian.org/debian \
            --mirror-chroot    http://deb.debian.org/debian \
            --mirror-binary    http://deb.debian.org/debian \
            --mirror-chroot-security http://security.debian.org/debian-security \
            --mirror-binary-security http://security.debian.org/debian-security \
            --linux-flavours amd64 \
            --linux-packages "linux-image"

          sudo lb build
          ls -lh

      - name: Collect ISO
        run: |
          ISO=$(ls *.iso 2>/dev/null || ls live-image-*.iso 2>/dev/null || ls */*.iso 2>/dev/null)
          cp "$ISO" novamind-lite-os-live-amd64.iso
          ls -lh novamind-lite-os-live-amd64.iso

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: novamind-lite-os-live-amd64
          path: novamind-lite-os-live-amd64.iso
